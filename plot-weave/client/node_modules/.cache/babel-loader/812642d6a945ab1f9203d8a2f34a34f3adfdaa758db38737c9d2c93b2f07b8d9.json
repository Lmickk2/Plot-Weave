{"ast":null,"code":"var _jsxFileName = \"/Users/lukemickan/Desktop/Plot Weave/Plot-Weave/plot-weave/client/src/pages/SinglePost.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\n\n// Import the `useParams()` hook\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\n// import CommentList from '../components/CommentList';\n// import CommentForm from '../components/CommentForm';\nimport { Helmet } from \"react-helmet\";\nimport { QUERY_SINGLE_POST } from '../utils/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SinglePost = () => {\n  _s();\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\n  const {\n    postId\n  } = useParams();\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_SINGLE_POST, {\n    variables: {\n      postId: postId\n    }\n  });\n  const post = (data === null || data === void 0 ? void 0 : data.post) || {};\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"spinner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"spinner1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Split the postText into an array of lines\n  const postTextLines = post.postText.split('\\n');\n\n  // Add an onMouseOver event handler to each line that prompts the user to weave it\n  const postTextWithHover = postTextLines.map((line, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n    onMouseOver: () => alert(`Weave line ${index + 1}?`),\n    children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appear single-post\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Plot Weave | \", post.postTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"created-by right\",\n        children: [post.postTitle, \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '1rem'\n          },\n          children: post.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: /*#__PURE__*/_jsxDEV(\"blockquote\", {\n          className: \"post-block\",\n          children: postTextWithHover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cont-space\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(SinglePost, \"hvs98O3Jw0Jyoqo2G3a67o3/EG0=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = SinglePost;\nexport default SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["React","useParams","useQuery","Helmet","QUERY_SINGLE_POST","jsxDEV","_jsxDEV","SinglePost","_s","postId","loading","data","variables","post","class","children","fileName","_jsxFileName","lineNumber","columnNumber","postTextLines","postText","split","postTextWithHover","map","line","index","onMouseOver","alert","className","postTitle","style","fontSize","createdAt","_c","$RefreshReg$"],"sources":["/Users/lukemickan/Desktop/Plot Weave/Plot-Weave/plot-weave/client/src/pages/SinglePost.js"],"sourcesContent":["import React from 'react';\n\n// Import the `useParams()` hook\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\n// import CommentList from '../components/CommentList';\n// import CommentForm from '../components/CommentForm';\nimport { Helmet } from \"react-helmet\";\n\nimport { QUERY_SINGLE_POST } from '../utils/queries';\n\nconst SinglePost = () => {\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\n  const { postId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_SINGLE_POST, {\n\n    variables: { postId: postId },\n  });\n\n  const post = data?.post || {};\n\n  if (loading) {\n    return <div class=\"spinner\">\n    <div class=\"spinner1\"></div>\n  </div>;\n  }\n\n  // Split the postText into an array of lines\n  const postTextLines = post.postText.split('\\n');\n\n  // Add an onMouseOver event handler to each line that prompts the user to weave it\n  const postTextWithHover = postTextLines.map((line, index) => (\n    <span key={index} onMouseOver={() => alert(`Weave line ${index + 1}?`)}>\n      {line}\n      <br />\n    </span>\n  ));\n\n  return (\n    <div className=\"appear single-post\">\n      <Helmet>\n          <title>Plot Weave | {post.postTitle}</title>\n      </Helmet>\n    <div className=\"my-3\">\n      <h3 className=\"created-by right\">\n       {post.postTitle}  <br />\n        <span style={{ fontSize: '1rem' }}>\n          {post.createdAt}\n        </span>\n      </h3>\n      <div className=\"post-container\">\n        <blockquote className=\"post-block\">\n          {postTextWithHover}\n        </blockquote>\n      </div>\n    </div>\n    <div className=\"cont-space\"></div>\n    </div>\n  );\n};\n\n\nexport default SinglePost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/lukemickan/Desktop/Plot Weave/Plot-Weave/plot-weave/client/src/pages/SinglePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Import the `useParams()` hook\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { Helmet } from \"react-helmet\";\nimport { QUERY_SINGLE_POST } from '../utils/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SinglePost = () => {\n  _s();\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\n  const {\n    postId\n  } = useParams();\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_SINGLE_POST, {\n    variables: {\n      postId: postId\n    }\n  });\n  const post = (data === null || data === void 0 ? void 0 : data.post) || {};\n\n  // Define a state variable to track the currently hovered line index\n  const [hoveredLine, setHoveredLine] = useState(null);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Split the postText into an array of lines\n  const postTextLines = post.postText.split('\\n');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appear single-post\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Plot Weave | \", post.postTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"created-by right\",\n        children: [post.postTitle, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '1rem'\n          },\n          children: post.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: postTextLines.map((line, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/weave\",\n            onMouseEnter: () => setHoveredLine(index),\n            onMouseLeave: () => setHoveredLine(null),\n            children: line\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), hoveredLine === index && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              position: 'absolute',\n              top: '50%',\n              right: 0,\n              transform: 'translateY(-50%)',\n              backgroundColor: '#fff',\n              padding: '0.25rem'\n            },\n            children: \"Weave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cont-space\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SinglePost, \"XBJgaghtD+EkUw3edxRZ7li6iRk=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = SinglePost;\nexport default SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["React","useState","useParams","useQuery","Helmet","QUERY_SINGLE_POST","jsxDEV","_jsxDEV","SinglePost","_s","postId","loading","data","variables","post","hoveredLine","setHoveredLine","className","children","fileName","_jsxFileName","lineNumber","columnNumber","postTextLines","postText","split","postTitle","style","fontSize","createdAt","map","line","index","display","href","onMouseEnter","onMouseLeave","position","top","right","transform","backgroundColor","padding","_c","$RefreshReg$"],"sources":["/Users/lukemickan/Desktop/Plot Weave/Plot-Weave/plot-weave/client/src/pages/SinglePost.js"],"sourcesContent":["import React, { useState } from 'react';\n\n// Import the `useParams()` hook\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { Helmet } from \"react-helmet\";\n\nimport { QUERY_SINGLE_POST } from '../utils/queries';\n\nconst SinglePost = () => {\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\n  const { postId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_SINGLE_POST, {\n    variables: { postId: postId },\n  });\n\n  const post = data?.post || {};\n\n  // Define a state variable to track the currently hovered line index\n  const [hoveredLine, setHoveredLine] = useState(null);\n\n  if (loading) {\n    return (\n      <div className=\"spinner\">\n        <div className=\"spinner1\"></div>\n      </div>\n    );\n  }\n\n  // Split the postText into an array of lines\n  const postTextLines = post.postText.split('\\n');\n\n  return (\n    <div className=\"appear single-post\">\n      <Helmet>\n        <title>Plot Weave | {post.postTitle}</title>\n      </Helmet>\n      <div className=\"my-3\">\n        <h3 className=\"created-by right\">\n          {post.postTitle}\n          <br />\n          <span style={{ fontSize: '1rem' }}>{post.createdAt}</span>\n        </h3>\n        <div className=\"post-container\">\n          {postTextLines.map((line, index) => (\n            <span key={index} style={{ display: 'block' }}>\n              <a\n                href=\"/weave\"\n                onMouseEnter={() => setHoveredLine(index)}\n                onMouseLeave={() => setHoveredLine(null)}\n              >\n                {line}\n              </a>\n              {hoveredLine === index && (\n                <span\n                  style={{\n                    position: 'absolute',\n                    top: '50%',\n                    right: 0,\n                    transform: 'translateY(-50%)',\n                    backgroundColor: '#fff',\n                    padding: '0.25rem',\n                  }}\n                >\n                  Weave\n                </span>\n              )}\n            </span>\n          ))}\n        </div>\n      </div>\n      <div className=\"cont-space\"></div>\n    </div>\n  );\n};\n\n\n\nexport default SinglePost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
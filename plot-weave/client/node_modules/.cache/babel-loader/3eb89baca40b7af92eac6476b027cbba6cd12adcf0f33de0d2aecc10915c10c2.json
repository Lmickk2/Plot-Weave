{"ast":null,"code":"var _jsxFileName = \"/Users/lukemickan/Desktop/Plot Weave/Plot-Weave/plot-weave/client/src/pages/SinglePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { Helmet } from \"react-helmet\";\nimport { QUERY_SINGLE_POST } from '../utils/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SinglePost = () => {\n  _s();\n  const {\n    postId\n  } = useParams();\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_SINGLE_POST, {\n    variables: {\n      postId: postId\n    }\n  });\n  const post = (data === null || data === void 0 ? void 0 : data.post) || {};\n  const postTextLines = post.postText.split('\\n');\n  const [hoveredLine, setHoveredLine] = useState(null);\n  const handleWeave = lineIndex => {\n    // Implement your weaving logic here\n    alert(`Weaving line ${lineIndex}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appear single-post\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Plot Weave | \", post.postTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"created-by right\",\n        children: [post.postTitle, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '1rem'\n          },\n          children: post.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: postTextLines.map((line, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onMouseEnter: () => setHoveredLine(index),\n            onMouseLeave: () => setHoveredLine(null),\n            onClick: () => handleWeave(index),\n            children: line\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), hoveredLine === index && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              position: 'absolute',\n              top: '50%',\n              right: 0,\n              transform: 'translateY(-50%)',\n              backgroundColor: '#fff',\n              padding: '0.25rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleWeave(index),\n              children: \"Weave\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cont-space\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(SinglePost, \"XBJgaghtD+EkUw3edxRZ7li6iRk=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = SinglePost;\nexport default SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["React","useState","useParams","useQuery","Helmet","QUERY_SINGLE_POST","jsxDEV","_jsxDEV","SinglePost","_s","postId","loading","data","variables","post","postTextLines","postText","split","hoveredLine","setHoveredLine","handleWeave","lineIndex","alert","className","children","postTitle","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","createdAt","map","line","index","display","href","onMouseEnter","onMouseLeave","onClick","position","top","right","transform","backgroundColor","padding","_c","$RefreshReg$"],"sources":["/Users/lukemickan/Desktop/Plot Weave/Plot-Weave/plot-weave/client/src/pages/SinglePost.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { Helmet } from \"react-helmet\";\nimport { QUERY_SINGLE_POST } from '../utils/queries';\n\nconst SinglePost = () => {\n  const { postId } = useParams();\n  const { loading, data } = useQuery(QUERY_SINGLE_POST, {\n    variables: { postId: postId },\n  });\n\n  const post = data?.post || {};\n  const postTextLines = post.postText.split('\\n');\n\n  const [hoveredLine, setHoveredLine] = useState(null);\n\n  const handleWeave = (lineIndex) => {\n    // Implement your weaving logic here\n    alert(`Weaving line ${lineIndex}`);\n  };\n\n  return (\n    <div className=\"appear single-post\">\n      <Helmet>\n        <title>Plot Weave | {post.postTitle}</title>\n      </Helmet>\n      <div className=\"my-3\">\n        <h3 className=\"created-by right\">\n          {post.postTitle}\n          <br />\n          <span style={{ fontSize: '1rem' }}>{post.createdAt}</span>\n        </h3>\n        <div className=\"post-container\">\n          {postTextLines.map((line, index) => (\n            <span key={index} style={{ display: 'block' }}>\n              <a\n                href=\"#\"\n                onMouseEnter={() => setHoveredLine(index)}\n                onMouseLeave={() => setHoveredLine(null)}\n                onClick={() => handleWeave(index)}\n              >\n                {line}\n              </a>\n              {hoveredLine === index && (\n                <span\n                  style={{\n                    position: 'absolute',\n                    top: '50%',\n                    right: 0,\n                    transform: 'translateY(-50%)',\n                    backgroundColor: '#fff',\n                    padding: '0.25rem',\n                  }}\n                >\n                  <button onClick={() => handleWeave(index)}>Weave</button>\n                </span>\n              )}\n            </span>\n          ))}\n        </div>\n      </div>\n      <div className=\"cont-space\"></div>\n    </div>\n  );\n};\n\nexport default SinglePost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
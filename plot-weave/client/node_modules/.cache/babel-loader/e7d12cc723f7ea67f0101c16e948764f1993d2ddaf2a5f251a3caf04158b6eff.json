{"ast":null,"code":"var _jsxFileName = \"/Users/lukemickan/Desktop/Plot Weave/Plot-Weave/plot-weave/client/src/pages/Weave.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weave = props => {\n  _s();\n  const {\n    postId,\n    sentenceIndex\n  } = useParams();\n  console.log('postId:', postId);\n  console.log('sentenceIndex:', sentenceIndex);\n  // Use the postId and sentenceIndex to retrieve the appropriate content\n  // ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Post ID: \", postId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sentence Index: \", sentenceIndex]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(Weave, \"2AvLE9TINZPUfgdVNyQ/JJiw5OE=\", false, function () {\n  return [useParams];\n});\n_c = Weave;\nexport default Weave;\nvar _c;\n$RefreshReg$(_c, \"Weave\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","Weave","props","_s","postId","sentenceIndex","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lukemickan/Desktop/Plot Weave/Plot-Weave/plot-weave/client/src/pages/Weave.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Weave = (props) => {\n  const { postId, sentenceIndex } = useParams();\n  console.log('postId:', postId);\n  console.log('sentenceIndex:', sentenceIndex);\n  // Use the postId and sentenceIndex to retrieve the appropriate content\n  // ...\n\n  return (\n    <div>\n      <h1>Weave</h1>\n      <p>Post ID: {postId}</p>\n      <p>Sentence Index: {sentenceIndex}</p>\n    </div>\n  );\n};\n\nexport default Weave;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB,MAAM;IAAEC,MAAM;IAAEC;EAAc,CAAC,GAAGP,SAAS,EAAE;EAC7CQ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;EAC9BE,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,aAAa,CAAC;EAC5C;EACA;;EAEA,oBACEL,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACdZ,OAAA;MAAAQ,QAAA,GAAG,WAAS,EAACJ,MAAM;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACxBZ,OAAA;MAAAQ,QAAA,GAAG,kBAAgB,EAACH,aAAa;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClC;AAEV,CAAC;AAACT,EAAA,CAdIF,KAAK;EAAA,QACyBH,SAAS;AAAA;AAAAe,EAAA,GADvCZ,KAAK;AAgBX,eAAeA,KAAK;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
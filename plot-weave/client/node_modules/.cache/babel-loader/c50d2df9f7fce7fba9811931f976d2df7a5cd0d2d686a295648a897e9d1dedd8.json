{"ast":null,"code":"var _jsxFileName = \"/Users/lukemickan/Desktop/Plot Weave/Plot-Weave/plot-weave/client/src/pages/SinglePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { Helmet } from \"react-helmet\";\nimport { QUERY_SINGLE_POST } from \"../utils/queries\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SinglePost = () => {\n  _s();\n  const {\n    postId\n  } = useParams();\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_SINGLE_POST, {\n    variables: {\n      postId: postId\n    }\n  });\n  const post = (data === null || data === void 0 ? void 0 : data.post) || {};\n  const weaveSentence = (sentenceIndex, sentenceText) => {\n    const sentences = post.postText.split(\". \");\n    const selectedSentences = sentences.slice(0, sentenceIndex + 1);\n    const url = selectedSentences.join(\". \").replace(/\\s+/g, \"-\").toLowerCase();\n    const dataText = selectedSentences.map(s => s.trim() + \".\").join(\" \");\n    return {\n      href: `/weave/${postId}/${url}?sentenceIndex=${sentenceIndex}&sentenceText=${sentenceText}`,\n      \"data-text\": dataText,\n      onClick: () => setClickedSentence(sentenceIndex, sentenceText)\n    };\n  };\n  const [hoveredSentence, setHoveredSentence] = useState(null);\n  const [clickedSentence, setClickedSentence] = useState(null);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n  const sentences = post.postText.split(\". \");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appear single-post\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Plot Weave | \", post.postTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"created-by right\",\n        children: [post.postTitle, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"1rem\"\n          },\n          children: post.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: sentences.map((sentence, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            ...weaveSentence(index, sentence),\n            onMouseEnter: () => setHoveredSentence(index),\n            onMouseLeave: () => setHoveredSentence(null),\n            onClick: () => setClickedSentence(index, sentence),\n            children: sentence.trim() + \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), hoveredSentence === index && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              position: \"absolute\",\n              top: \"50%\",\n              right: 0,\n              transform: \"translateY(-50%)\",\n              backgroundColor: \"#fff\",\n              padding: \"0.25rem\"\n            },\n            children: \"Weave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cont-space\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(SinglePost, \"hWOSfjw0n2iZzJCr6hMOgFUl7ak=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = SinglePost;\nexport default SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["React","useState","useParams","useQuery","Helmet","QUERY_SINGLE_POST","Link","jsxDEV","_jsxDEV","SinglePost","_s","postId","loading","data","variables","post","weaveSentence","sentenceIndex","sentenceText","sentences","postText","split","selectedSentences","slice","url","join","replace","toLowerCase","dataText","map","s","trim","href","onClick","setClickedSentence","hoveredSentence","setHoveredSentence","clickedSentence","className","children","fileName","_jsxFileName","lineNumber","columnNumber","postTitle","style","fontSize","createdAt","sentence","index","onMouseEnter","onMouseLeave","position","top","right","transform","backgroundColor","padding","_c","$RefreshReg$"],"sources":["/Users/lukemickan/Desktop/Plot Weave/Plot-Weave/plot-weave/client/src/pages/SinglePost.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { Helmet } from \"react-helmet\";\nimport { QUERY_SINGLE_POST } from \"../utils/queries\";\nimport { Link } from \"react-router-dom\";\n\nconst SinglePost = () => {\n  const { postId } = useParams();\n  const { loading, data } = useQuery(QUERY_SINGLE_POST, {\n    variables: { postId: postId },\n  });\n\n  const post = data?.post || {};\n\n  const weaveSentence = (sentenceIndex, sentenceText) => {\n    const sentences = post.postText.split(\". \");\n    const selectedSentences = sentences.slice(0, sentenceIndex + 1);\n    const url = selectedSentences\n      .join(\". \")\n      .replace(/\\s+/g, \"-\")\n      .toLowerCase();\n    const dataText = selectedSentences\n      .map((s) => s.trim() + \".\")\n      .join(\" \");\n    return {\n      href: `/weave/${postId}/${url}?sentenceIndex=${sentenceIndex}&sentenceText=${sentenceText}`,\n      \"data-text\": dataText,\n      onClick: () => setClickedSentence(sentenceIndex, sentenceText)\n    };\n  };\n  \n  \n\n  const [hoveredSentence, setHoveredSentence] = useState(null);\n  const [clickedSentence, setClickedSentence] = useState(null);\n\n  if (loading) {\n    return (\n      <div className=\"spinner\">\n        <div className=\"spinner1\"></div>\n      </div>\n    );\n  }\n\n  const sentences = post.postText.split(\". \");\n\n  return (\n    <div className=\"appear single-post\">\n      <Helmet>\n        <title>Plot Weave | {post.postTitle}</title>\n      </Helmet>\n      <div className=\"my-3\">\n        <h3 className=\"created-by right\">\n          {post.postTitle}\n          <br />\n          <span style={{ fontSize: \"1rem\" }}>{post.createdAt}</span>\n        </h3>\n        <div className=\"post-container\">\n          {sentences.map((sentence, index) => (\n            <span key={index}>\n              <a\n                {...weaveSentence(index, sentence)}\n                onMouseEnter={() => setHoveredSentence(index)}\n                onMouseLeave={() => setHoveredSentence(null)}\n                onClick={() => setClickedSentence(index, sentence)}\n              >\n                {sentence.trim() + \".\"}\n              </a>\n\n              {hoveredSentence === index && (\n                <span\n                  style={{\n                    position: \"absolute\",\n                    top: \"50%\",\n                    right: 0,\n                    transform: \"translateY(-50%)\",\n                    backgroundColor: \"#fff\",\n                    padding: \"0.25rem\",\n                  }}\n                >\n                  Weave\n                </span>\n              )}\n            </span>\n          ))}\n        </div>\n      </div>\n      <div className=\"cont-space\"></div>\n    </div>\n  );\n};\n\nexport default SinglePost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}